-- =====================================================
-- TESTAR TABELAS DO INVENT√ÅRIO
-- Execute este script para verificar se tudo est√° funcionando
-- =====================================================

-- 1. VERIFICAR SE AS TABELAS EXISTEM
SELECT 'asset_categories' as tabela, 
       CASE WHEN EXISTS (SELECT 1 FROM information_schema.tables WHERE table_name = 'asset_categories') 
            THEN '‚úÖ EXISTE' ELSE '‚ùå N√ÉO EXISTE' END as status;

SELECT 'units' as tabela, 
       CASE WHEN EXISTS (SELECT 1 FROM information_schema.tables WHERE table_name = 'units') 
            THEN '‚úÖ EXISTE' ELSE '‚ùå N√ÉO EXISTE' END as status;

SELECT 'assets' as tabela, 
       CASE WHEN EXISTS (SELECT 1 FROM information_schema.tables WHERE table_name = 'assets') 
            THEN '‚úÖ EXISTE' ELSE '‚ùå N√ÉO EXISTE' END as status;

SELECT 'asset_movements' as tabela, 
       CASE WHEN EXISTS (SELECT 1 FROM information_schema.tables WHERE table_name = 'asset_movements') 
            THEN '‚úÖ EXISTE' ELSE '‚ùå N√ÉO EXISTE' END as status;

-- 2. VERIFICAR RLS (forma correta)
SELECT 'asset_categories' as tabela, 
       CASE WHEN EXISTS (
         SELECT 1 FROM pg_policies WHERE tablename = 'asset_categories'
       ) THEN 'üîí RLS ATIVO' ELSE 'üîì RLS DESABILITADO' END as rls_status;

SELECT 'units' as tabela, 
       CASE WHEN EXISTS (
         SELECT 1 FROM pg_policies WHERE tablename = 'units'
       ) THEN 'üîí RLS ATIVO' ELSE 'üîì RLS DESABILITADO' END as rls_status;

SELECT 'assets' as tabela, 
       CASE WHEN EXISTS (
         SELECT 1 FROM pg_policies WHERE tablename = 'assets'
       ) THEN 'üîí RLS ATIVO' ELSE 'üîì RLS DESABILITADO' END as rls_status;

SELECT 'asset_movements' as tabela, 
       CASE WHEN EXISTS (
         SELECT 1 FROM pg_policies WHERE tablename = 'asset_movements'
       ) THEN 'üîí RLS ATIVO' ELSE 'üîì RLS DESABILITADO' END as rls_status;

-- 3. CONTAR REGISTROS
SELECT 'asset_categories' as tabela, COUNT(*) as total FROM asset_categories
UNION ALL
SELECT 'units' as tabela, COUNT(*) as total FROM units
UNION ALL
SELECT 'assets' as tabela, COUNT(*) as total FROM assets
UNION ALL
SELECT 'asset_movements' as tabela, COUNT(*) as total FROM asset_movements;

-- 4. TESTAR INSER√á√ÉO DE UNIDADE
INSERT INTO units (name, code, city, state) 
VALUES ('Teste Unidade', 'TESTE-001', 'S√£o Paulo', 'SP')
ON CONFLICT (code) DO NOTHING;

SELECT '‚úÖ Teste de inser√ß√£o conclu√≠do' as resultado;

-- 5. VERIFICAR DADOS
SELECT 'üìä CATEGORIAS:' as info;
SELECT name, description, icon, color FROM asset_categories ORDER BY name;

SELECT 'üè¢ UNIDADES:' as info;
SELECT name, code, city, state, status FROM units ORDER BY name;

-- 6. LIMPAR DADOS DE TESTE
DELETE FROM units WHERE code = 'TESTE-001';
SELECT 'üßπ Dados de teste removidos' as resultado;
